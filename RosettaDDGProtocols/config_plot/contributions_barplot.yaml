# Configuration file for plotting a split violin plot showing the
# distribution of ΔG scores in pairs of corresponding wild-type and
# mutant structures.


# version of the configuration file
version: 1


#------------------------ OUTPUT FILE OPTIONS ------------------------#


# output file settings (passed to 'matplotlib.pyplot.savefig')
output:
  # DPI (the higher the number, the higher the resolution)
  dpi: 900
  # whether to have a transparent or opaque background
  transparent: True
  # format of the output file
  format: "pdf"
  # bbox in inches. If 'tight', use tight layout for the figure
  bbox_inches: "tight"


#--------------------------- BARPLOT OPTIONS -------------------------#


plot:
  # plot type
  type: "contributions_barplot"

  # plot options
  options:
    barplot:
      # barplot settings (passed to 'pandas.DataFrame.plot')   
      bars:
        stacked: True

      annot:
        # whether to write annotations or not
        annot: True
        # how many decimals to keep
        ndecimals: 3
        # style of the annotations
        style:
          # color of the annotations
          color: "black"
          ha: "center"
          va: "bottom"
          # font properties
          fontproperties:
            fname: !!null
            size: 5

    axhline:
      color: "black"
      linestyle: "--"
      linewidth: 1
      

    # y-axis settings  
    xaxis:
      # label settings (passed to 'matplotlib.axes.Axes.set_xlabel')
      label:
        xlabel: "Mutations"
        fontproperties:
          size: 12
      # tick labels settings (passed to 
      # 'matplotlib.axes.Axes.set_xticklabels')  
      ticklabels:
        # tick label rotation
        rotation: 90
        # tick label font properties
        fontproperties:
          fname: !!null
          size: 8
      
    # y-axis settings
    yaxis:
      # label settings 
      # (passed to 'matplotlib.axes.Axes.set_ylabel')
      label:
        ylabel: "ΔΔG scores (kcal/mol)"
      # tick labels settings 
      # (passed to 'matplotlib.axes.Axes.set_yticklabels')
      ticklabels:
        # tick label rotation
        rotation: 0
        # tick label font properties
        fontproperties:
          fname: !!null
          size: 8
      interval:
        type: continuous
        center_in_zero: True

    # legend settings (passed to 'matplotlib.pyplot.legend')
    legend:
      # location of the legend
      loc: "best"
      # bbox_to_anchor is for manual legend placement. Assumes
      # the coordinate system is 'transFigure' (the figure
      # coordinate system, not the axes' one)
      bbox_to_anchor: !!seq [1.05, 1.01]
      # whether to draw the legend frame
      frameon: False
      # legend title
      title: "Energy contributions"
      # font properties of the legend
      prop:
        size: 10
