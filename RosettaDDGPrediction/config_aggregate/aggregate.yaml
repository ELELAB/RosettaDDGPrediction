# Configuration file for data aggregation.
#
# Conversion factors for both the talaris and ref energy functions
# are taken from the work of Park et al. [park2015]_
#
# .. [park2015] Park, Hahnbeom, et al. "Simultaneous optimization of 
#               biomolecular energy functions on features from small 
#               molecules and macromolecules." Journal of chemical 
#               theory and computation 12.12 (2016): 6201-6212.


# version of the configuration file
version: 1


#----------------- SCORING FUNCTION-RELATED OPTIONS ------------------#


# conversion factors to be used in converting Rosetta Energy Units
# (REUs) to kcal/mol
conversion_factors: 
  # for ref2015 scoring function
  ref2015 : 2.94
  # for ref2015 scoring function in Cartesian space
  ref2015_cart : 2.94
  # for talaris2014 scoring function
  talaris2014 : 1.84
  # for talaris2014 scoring function in Cartesian space
  talaris2014_cart : 1.84

# list of energy contributions making up the total energy score
energy_contributions:
  # for ref2015 scoring function
  ref2015: !!seq ["fa_atr", "fa_rep", "fa_sol", "fa_intra_rep",
                  "fa_intra_sol_xover4", "lk_ball_wtd", "fa_elec",
                  "hbond_sr_bb", "hbond_lr_bb", "hbond_bb_sc",
                  "hbond_sc", "omega", "fa_dun", "p_aa_pp",
                  "yhh_planarity", "ref", "rama_prepro"]
  # for ref2015 scoring function in Cartesian space
  ref2015_cart: !!seq ["fa_atr", "fa_rep", "fa_sol", "fa_intra_rep", 
                       "fa_intra_sol_xover4", "lk_ball_wtd", 
                       "fa_elec", "hbond_sr_bb", "hbond_lr_bb", 
                       "hbond_bb_sc", "hbond_sc", "dslf_fa13", 
                       "omega", "fa_dun", "p_aa_pp", "yhh_planarity", 
                       "ref", "rama_prepro", "cart_bonded"]
  # for talaris2014 scoring function
  talaris2014: !!seq ["fa_atr", "fa_rep", "fa_sol", "fa_intra_rep",
                      "fa_elec", "hbond_sr_bb", "hbond_lr_bb", 
                      "hbond_bb_sc", "hbond_sc", "rama", "omega", 
                      "fa_dun", "p_aa_pp", "yhh_planarity", "ref"]
  # for talaris2014 scoring function in Cartesian space
  talaris2014_cart: !!seq ["fa_atr", "fa_rep", "fa_sol", 
                           "fa_intra_rep", "fa_elec", "hbond_sr_bb",
                           "hbond_lr_bb", "hbond_bb_sc", "hbond_sc",
                           "rama", "omega", "fa_dun", "p_aa_pp", 
                           "yhh_planarity", "ref", "cart_bonded"]


#--------------------- OUTPUT DATAFRAMES OPTIONS ---------------------#


out_dfs:
  
  # whether to rescale the energy scores to kcal/mol
  convert_to_kcalmol: True
  
  # format options for the output dataframes
  options:
    # whether to write out the index column
    index: False
    # which format to be used for floating point numbers
    float_format: "%.5f"
    # character to be used as field separator
    sep: ","

  # name of the output files storing the dataframes
  out_names:
    # name of the output file storing the dataframe containing
    # the aggregate results for all mutations performed in
    # the run
    out_aggregate: "ddg_mutations_aggregate.csv"
    # name of the output file storing the dataframe containing
    # the results for all mutations performed in the run,
    # split by the single structures produced during the run
    out_structures: "ddg_mutations_structures.csv"
    # suffix to be appended to the output files containing
    # aggregate results for each mutation performed in the run
    out_suffix_aggregate: "_aggregate.csv"
    # suffix to be appended to the output files containing
    # results for each mutation performed in the run, split
    # by the single structures produced during the run
    out_suffix_structures: "_structures.csv"